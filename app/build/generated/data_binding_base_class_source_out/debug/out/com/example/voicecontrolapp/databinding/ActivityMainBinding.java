// Generated by view binder compiler. Do not edit!
package com.example.voicecontrolapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.voicecontrolapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button blueButton;

  @NonNull
  public final TextView commandText;

  @NonNull
  public final Button greenButton;

  @NonNull
  public final Button inputVoice;

  @NonNull
  public final Button redButton;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button blueButton,
      @NonNull TextView commandText, @NonNull Button greenButton, @NonNull Button inputVoice,
      @NonNull Button redButton) {
    this.rootView = rootView;
    this.blueButton = blueButton;
    this.commandText = commandText;
    this.greenButton = greenButton;
    this.inputVoice = inputVoice;
    this.redButton = redButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.blueButton;
      Button blueButton = ViewBindings.findChildViewById(rootView, id);
      if (blueButton == null) {
        break missingId;
      }

      id = R.id.commandText;
      TextView commandText = ViewBindings.findChildViewById(rootView, id);
      if (commandText == null) {
        break missingId;
      }

      id = R.id.greenButton;
      Button greenButton = ViewBindings.findChildViewById(rootView, id);
      if (greenButton == null) {
        break missingId;
      }

      id = R.id.inputVoice;
      Button inputVoice = ViewBindings.findChildViewById(rootView, id);
      if (inputVoice == null) {
        break missingId;
      }

      id = R.id.redButton;
      Button redButton = ViewBindings.findChildViewById(rootView, id);
      if (redButton == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, blueButton, commandText,
          greenButton, inputVoice, redButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
